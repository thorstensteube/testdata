# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! CONTAINER_REGISTRY=${CONTAINER_REGISTRY} $CONTAINER_REGISTRY ${{ vars.CONTAINER_REGISTRY }} ${{ env.CONTAINER_REGISTRY }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "repository variable : ${{ vars.REPOSITORY_VAR }}"
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ vars.CONTAINER_REGISTRY }}/library/postgres:latest'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

        #env:
        #  TRIVY_USERNAME: Username
        #  TRIVY_PASSWORD: Password

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
          category: 'image'
