# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ vars.CONTAINER_REGISTRY }}/library/postgres:latest'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          ignore-unfixed: true
          #vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        #env:
        #  TRIVY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        #  TRIVY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
          category: 'image'

      - name: Run Azure vulnerability scanner
        uses: azure/container-scan@v0
        with:
          image-name: ${{ vars.CONTAINER_REGISTRY }}/library/postgres:latest
          #username: ${{ secrets.DOCKER_USERNAME }}
          #password: ${{ secrets.DOCKER_PASSWORD }}
          #format: 'sarif'
          #output: 'trivy-image-results2.sarif'
          #ignore-unfixed: true
          #vuln-type: 'os,library'
          severity-threshold: 'HIGH'
          run-quality-checks: false
